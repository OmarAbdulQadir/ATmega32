
APP_4_Flashing-led-DIO.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000005d0  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000018  00800060  000005d0  00000644  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00000960  00000000  00000000  0000065c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000c7a  00000000  00000000  00000fbc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e0 ed       	ldi	r30, 0xD0	; 208
  68:	f5 e0       	ldi	r31, 0x05	; 5
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a8 37       	cpi	r26, 0x78	; 120
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 e6 02 	jmp	0x5cc	; 0x5cc <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
#include "../../Drivers/MCAL/DIO/DIO_interface.h"

#define test_port_in DIO_REF_PORTA
#define test_port_out DIO_REF_PORTB

int main(void){
  82:	df 93       	push	r29
  84:	cf 93       	push	r28
  86:	00 d0       	rcall	.+0      	; 0x88 <main+0x6>
  88:	cd b7       	in	r28, 0x3d	; 61
  8a:	de b7       	in	r29, 0x3e	; 62

	for(u8 i= 0; i< 8; i++){
  8c:	1a 82       	std	Y+2, r1	; 0x02
  8e:	0c c0       	rjmp	.+24     	; 0xa8 <main+0x26>
		DIO_void_set_pin_in_pullUP(test_port_in, i);
  90:	80 e0       	ldi	r24, 0x00	; 0
  92:	6a 81       	ldd	r22, Y+2	; 0x02
  94:	0e 94 02 01 	call	0x204	; 0x204 <DIO_void_set_pin_in_pullUP>
		DIO_void_set_pin_dir(test_port_out, i, OUTPUT);
  98:	81 e0       	ldi	r24, 0x01	; 1
  9a:	6a 81       	ldd	r22, Y+2	; 0x02
  9c:	4f ef       	ldi	r20, 0xFF	; 255
  9e:	0e 94 a6 00 	call	0x14c	; 0x14c <DIO_void_set_pin_dir>
#define test_port_in DIO_REF_PORTA
#define test_port_out DIO_REF_PORTB

int main(void){

	for(u8 i= 0; i< 8; i++){
  a2:	8a 81       	ldd	r24, Y+2	; 0x02
  a4:	8f 5f       	subi	r24, 0xFF	; 255
  a6:	8a 83       	std	Y+2, r24	; 0x02
  a8:	8a 81       	ldd	r24, Y+2	; 0x02
  aa:	88 30       	cpi	r24, 0x08	; 8
  ac:	88 f3       	brcs	.-30     	; 0x90 <main+0xe>
		DIO_void_set_pin_in_pullUP(test_port_in, i);
		DIO_void_set_pin_dir(test_port_out, i, OUTPUT);
	}
	while(1){
		for(u8 i= 0; i< 8; i++){
  ae:	19 82       	std	Y+1, r1	; 0x01
  b0:	0d c0       	rjmp	.+26     	; 0xcc <main+0x4a>
			DIO_void_assign_pin(test_port_out, i, DIO_u8_get_pin(test_port_in, i));
  b2:	80 e0       	ldi	r24, 0x00	; 0
  b4:	69 81       	ldd	r22, Y+1	; 0x01
  b6:	0e 94 c1 02 	call	0x582	; 0x582 <DIO_u8_get_pin>
  ba:	98 2f       	mov	r25, r24
  bc:	81 e0       	ldi	r24, 0x01	; 1
  be:	69 81       	ldd	r22, Y+1	; 0x01
  c0:	49 2f       	mov	r20, r25
  c2:	0e 94 4f 02 	call	0x49e	; 0x49e <DIO_void_assign_pin>
	for(u8 i= 0; i< 8; i++){
		DIO_void_set_pin_in_pullUP(test_port_in, i);
		DIO_void_set_pin_dir(test_port_out, i, OUTPUT);
	}
	while(1){
		for(u8 i= 0; i< 8; i++){
  c6:	89 81       	ldd	r24, Y+1	; 0x01
  c8:	8f 5f       	subi	r24, 0xFF	; 255
  ca:	89 83       	std	Y+1, r24	; 0x01
  cc:	89 81       	ldd	r24, Y+1	; 0x01
  ce:	88 30       	cpi	r24, 0x08	; 8
  d0:	80 f3       	brcs	.-32     	; 0xb2 <main+0x30>
  d2:	ed cf       	rjmp	.-38     	; 0xae <main+0x2c>

000000d4 <DIO_void_set_port_dir>:


/* Implementing of the driver functions */
/* Set direction of PORTx functions */
void DIO_void_set_port_dir(u8 copy_u8_port_id, u8 port_dir_copy)
{
  d4:	df 93       	push	r29
  d6:	cf 93       	push	r28
  d8:	00 d0       	rcall	.+0      	; 0xda <DIO_void_set_port_dir+0x6>
  da:	cd b7       	in	r28, 0x3d	; 61
  dc:	de b7       	in	r29, 0x3e	; 62
  de:	89 83       	std	Y+1, r24	; 0x01
  e0:	6a 83       	std	Y+2, r22	; 0x02
	 *						1: for output pin
	 *	
	 *	Function does not return any output, yet it affects the 
	 *	PORT Direction Register DDRx
	 */
	*(DIO_DDRx_REF[copy_u8_port_id]) = port_dir_copy;
  e2:	89 81       	ldd	r24, Y+1	; 0x01
  e4:	88 2f       	mov	r24, r24
  e6:	90 e0       	ldi	r25, 0x00	; 0
  e8:	88 0f       	add	r24, r24
  ea:	99 1f       	adc	r25, r25
  ec:	fc 01       	movw	r30, r24
  ee:	e8 59       	subi	r30, 0x98	; 152
  f0:	ff 4f       	sbci	r31, 0xFF	; 255
  f2:	01 90       	ld	r0, Z+
  f4:	f0 81       	ld	r31, Z
  f6:	e0 2d       	mov	r30, r0
  f8:	8a 81       	ldd	r24, Y+2	; 0x02
  fa:	80 83       	st	Z, r24
}
  fc:	0f 90       	pop	r0
  fe:	0f 90       	pop	r0
 100:	cf 91       	pop	r28
 102:	df 91       	pop	r29
 104:	08 95       	ret

00000106 <DIO_void_set_port_in_pullUp>:


void DIO_void_set_port_in_pullUp(u8 copy_u8_port_id)
{
 106:	df 93       	push	r29
 108:	cf 93       	push	r28
 10a:	0f 92       	push	r0
 10c:	cd b7       	in	r28, 0x3d	; 61
 10e:	de b7       	in	r29, 0x3e	; 62
 110:	89 83       	std	Y+1, r24	; 0x01
	 *												  	 (3, PORTD)
	 *	
	 *	Function does not return any output, yet it affects the 
	 *	PORT Direction Register DDRx
	 */
	*(DIO_DDRx_REF[copy_u8_port_id]) = INPUT;
 112:	89 81       	ldd	r24, Y+1	; 0x01
 114:	88 2f       	mov	r24, r24
 116:	90 e0       	ldi	r25, 0x00	; 0
 118:	88 0f       	add	r24, r24
 11a:	99 1f       	adc	r25, r25
 11c:	fc 01       	movw	r30, r24
 11e:	e8 59       	subi	r30, 0x98	; 152
 120:	ff 4f       	sbci	r31, 0xFF	; 255
 122:	01 90       	ld	r0, Z+
 124:	f0 81       	ld	r31, Z
 126:	e0 2d       	mov	r30, r0
 128:	10 82       	st	Z, r1
	*(DIO_PORTx_REF[copy_u8_port_id]) = PORT_MAX;
 12a:	89 81       	ldd	r24, Y+1	; 0x01
 12c:	88 2f       	mov	r24, r24
 12e:	90 e0       	ldi	r25, 0x00	; 0
 130:	88 0f       	add	r24, r24
 132:	99 1f       	adc	r25, r25
 134:	fc 01       	movw	r30, r24
 136:	e0 59       	subi	r30, 0x90	; 144
 138:	ff 4f       	sbci	r31, 0xFF	; 255
 13a:	01 90       	ld	r0, Z+
 13c:	f0 81       	ld	r31, Z
 13e:	e0 2d       	mov	r30, r0
 140:	8f ef       	ldi	r24, 0xFF	; 255
 142:	80 83       	st	Z, r24
}
 144:	0f 90       	pop	r0
 146:	cf 91       	pop	r28
 148:	df 91       	pop	r29
 14a:	08 95       	ret

0000014c <DIO_void_set_pin_dir>:


/* Set direction of PINx functions */
void DIO_void_set_pin_dir(u8 copy_u8_port_id, u8 copy_u8_pin_num, u8 pin_dir_copy)
{
 14c:	df 93       	push	r29
 14e:	cf 93       	push	r28
 150:	00 d0       	rcall	.+0      	; 0x152 <DIO_void_set_pin_dir+0x6>
 152:	0f 92       	push	r0
 154:	cd b7       	in	r28, 0x3d	; 61
 156:	de b7       	in	r29, 0x3e	; 62
 158:	89 83       	std	Y+1, r24	; 0x01
 15a:	6a 83       	std	Y+2, r22	; 0x02
 15c:	4b 83       	std	Y+3, r20	; 0x03
	 *				   1: for output pin
	 *
	 * Function does not return any output, yet it affects the 
	 * pin in the PORT Direction Register DDRx
	 */	
	agn_bit(*(DIO_DDRx_REF[copy_u8_port_id]), copy_u8_pin_num, pin_dir_copy);
 15e:	8b 81       	ldd	r24, Y+3	; 0x03
 160:	88 23       	and	r24, r24
 162:	29 f1       	breq	.+74     	; 0x1ae <DIO_void_set_pin_dir+0x62>
 164:	89 81       	ldd	r24, Y+1	; 0x01
 166:	88 2f       	mov	r24, r24
 168:	90 e0       	ldi	r25, 0x00	; 0
 16a:	88 0f       	add	r24, r24
 16c:	99 1f       	adc	r25, r25
 16e:	fc 01       	movw	r30, r24
 170:	e8 59       	subi	r30, 0x98	; 152
 172:	ff 4f       	sbci	r31, 0xFF	; 255
 174:	a0 81       	ld	r26, Z
 176:	b1 81       	ldd	r27, Z+1	; 0x01
 178:	89 81       	ldd	r24, Y+1	; 0x01
 17a:	88 2f       	mov	r24, r24
 17c:	90 e0       	ldi	r25, 0x00	; 0
 17e:	88 0f       	add	r24, r24
 180:	99 1f       	adc	r25, r25
 182:	fc 01       	movw	r30, r24
 184:	e8 59       	subi	r30, 0x98	; 152
 186:	ff 4f       	sbci	r31, 0xFF	; 255
 188:	01 90       	ld	r0, Z+
 18a:	f0 81       	ld	r31, Z
 18c:	e0 2d       	mov	r30, r0
 18e:	80 81       	ld	r24, Z
 190:	48 2f       	mov	r20, r24
 192:	8a 81       	ldd	r24, Y+2	; 0x02
 194:	28 2f       	mov	r18, r24
 196:	30 e0       	ldi	r19, 0x00	; 0
 198:	81 e0       	ldi	r24, 0x01	; 1
 19a:	90 e0       	ldi	r25, 0x00	; 0
 19c:	02 2e       	mov	r0, r18
 19e:	02 c0       	rjmp	.+4      	; 0x1a4 <DIO_void_set_pin_dir+0x58>
 1a0:	88 0f       	add	r24, r24
 1a2:	99 1f       	adc	r25, r25
 1a4:	0a 94       	dec	r0
 1a6:	e2 f7       	brpl	.-8      	; 0x1a0 <DIO_void_set_pin_dir+0x54>
 1a8:	84 2b       	or	r24, r20
 1aa:	8c 93       	st	X, r24
 1ac:	25 c0       	rjmp	.+74     	; 0x1f8 <DIO_void_set_pin_dir+0xac>
 1ae:	89 81       	ldd	r24, Y+1	; 0x01
 1b0:	88 2f       	mov	r24, r24
 1b2:	90 e0       	ldi	r25, 0x00	; 0
 1b4:	88 0f       	add	r24, r24
 1b6:	99 1f       	adc	r25, r25
 1b8:	fc 01       	movw	r30, r24
 1ba:	e8 59       	subi	r30, 0x98	; 152
 1bc:	ff 4f       	sbci	r31, 0xFF	; 255
 1be:	a0 81       	ld	r26, Z
 1c0:	b1 81       	ldd	r27, Z+1	; 0x01
 1c2:	89 81       	ldd	r24, Y+1	; 0x01
 1c4:	88 2f       	mov	r24, r24
 1c6:	90 e0       	ldi	r25, 0x00	; 0
 1c8:	88 0f       	add	r24, r24
 1ca:	99 1f       	adc	r25, r25
 1cc:	fc 01       	movw	r30, r24
 1ce:	e8 59       	subi	r30, 0x98	; 152
 1d0:	ff 4f       	sbci	r31, 0xFF	; 255
 1d2:	01 90       	ld	r0, Z+
 1d4:	f0 81       	ld	r31, Z
 1d6:	e0 2d       	mov	r30, r0
 1d8:	80 81       	ld	r24, Z
 1da:	48 2f       	mov	r20, r24
 1dc:	8a 81       	ldd	r24, Y+2	; 0x02
 1de:	28 2f       	mov	r18, r24
 1e0:	30 e0       	ldi	r19, 0x00	; 0
 1e2:	81 e0       	ldi	r24, 0x01	; 1
 1e4:	90 e0       	ldi	r25, 0x00	; 0
 1e6:	02 2e       	mov	r0, r18
 1e8:	02 c0       	rjmp	.+4      	; 0x1ee <DIO_void_set_pin_dir+0xa2>
 1ea:	88 0f       	add	r24, r24
 1ec:	99 1f       	adc	r25, r25
 1ee:	0a 94       	dec	r0
 1f0:	e2 f7       	brpl	.-8      	; 0x1ea <DIO_void_set_pin_dir+0x9e>
 1f2:	80 95       	com	r24
 1f4:	84 23       	and	r24, r20
 1f6:	8c 93       	st	X, r24
}
 1f8:	0f 90       	pop	r0
 1fa:	0f 90       	pop	r0
 1fc:	0f 90       	pop	r0
 1fe:	cf 91       	pop	r28
 200:	df 91       	pop	r29
 202:	08 95       	ret

00000204 <DIO_void_set_pin_in_pullUP>:


void DIO_void_set_pin_in_pullUP(u8 copy_u8_port_id, u8 copy_u8_pin_num)
{
 204:	df 93       	push	r29
 206:	cf 93       	push	r28
 208:	00 d0       	rcall	.+0      	; 0x20a <DIO_void_set_pin_in_pullUP+0x6>
 20a:	cd b7       	in	r28, 0x3d	; 61
 20c:	de b7       	in	r29, 0x3e	; 62
 20e:	89 83       	std	Y+1, r24	; 0x01
 210:	6a 83       	std	Y+2, r22	; 0x02
	 *												  	 (3, PORTD)
	 *	
	 *	Function does not return any output, yet it affects the 
	 *	pin in the PORT Direction Register DDRx					  
	 */
	clr_bit(*(DIO_DDRx_REF[copy_u8_port_id]), copy_u8_pin_num);
 212:	89 81       	ldd	r24, Y+1	; 0x01
 214:	88 2f       	mov	r24, r24
 216:	90 e0       	ldi	r25, 0x00	; 0
 218:	88 0f       	add	r24, r24
 21a:	99 1f       	adc	r25, r25
 21c:	fc 01       	movw	r30, r24
 21e:	e8 59       	subi	r30, 0x98	; 152
 220:	ff 4f       	sbci	r31, 0xFF	; 255
 222:	a0 81       	ld	r26, Z
 224:	b1 81       	ldd	r27, Z+1	; 0x01
 226:	89 81       	ldd	r24, Y+1	; 0x01
 228:	88 2f       	mov	r24, r24
 22a:	90 e0       	ldi	r25, 0x00	; 0
 22c:	88 0f       	add	r24, r24
 22e:	99 1f       	adc	r25, r25
 230:	fc 01       	movw	r30, r24
 232:	e8 59       	subi	r30, 0x98	; 152
 234:	ff 4f       	sbci	r31, 0xFF	; 255
 236:	01 90       	ld	r0, Z+
 238:	f0 81       	ld	r31, Z
 23a:	e0 2d       	mov	r30, r0
 23c:	80 81       	ld	r24, Z
 23e:	48 2f       	mov	r20, r24
 240:	8a 81       	ldd	r24, Y+2	; 0x02
 242:	28 2f       	mov	r18, r24
 244:	30 e0       	ldi	r19, 0x00	; 0
 246:	81 e0       	ldi	r24, 0x01	; 1
 248:	90 e0       	ldi	r25, 0x00	; 0
 24a:	02 c0       	rjmp	.+4      	; 0x250 <DIO_void_set_pin_in_pullUP+0x4c>
 24c:	88 0f       	add	r24, r24
 24e:	99 1f       	adc	r25, r25
 250:	2a 95       	dec	r18
 252:	e2 f7       	brpl	.-8      	; 0x24c <DIO_void_set_pin_in_pullUP+0x48>
 254:	80 95       	com	r24
 256:	84 23       	and	r24, r20
 258:	8c 93       	st	X, r24
	set_bit(*(DIO_PORTx_REF[copy_u8_port_id]), copy_u8_pin_num);
 25a:	89 81       	ldd	r24, Y+1	; 0x01
 25c:	88 2f       	mov	r24, r24
 25e:	90 e0       	ldi	r25, 0x00	; 0
 260:	88 0f       	add	r24, r24
 262:	99 1f       	adc	r25, r25
 264:	fc 01       	movw	r30, r24
 266:	e0 59       	subi	r30, 0x90	; 144
 268:	ff 4f       	sbci	r31, 0xFF	; 255
 26a:	a0 81       	ld	r26, Z
 26c:	b1 81       	ldd	r27, Z+1	; 0x01
 26e:	89 81       	ldd	r24, Y+1	; 0x01
 270:	88 2f       	mov	r24, r24
 272:	90 e0       	ldi	r25, 0x00	; 0
 274:	88 0f       	add	r24, r24
 276:	99 1f       	adc	r25, r25
 278:	fc 01       	movw	r30, r24
 27a:	e0 59       	subi	r30, 0x90	; 144
 27c:	ff 4f       	sbci	r31, 0xFF	; 255
 27e:	01 90       	ld	r0, Z+
 280:	f0 81       	ld	r31, Z
 282:	e0 2d       	mov	r30, r0
 284:	80 81       	ld	r24, Z
 286:	48 2f       	mov	r20, r24
 288:	8a 81       	ldd	r24, Y+2	; 0x02
 28a:	28 2f       	mov	r18, r24
 28c:	30 e0       	ldi	r19, 0x00	; 0
 28e:	81 e0       	ldi	r24, 0x01	; 1
 290:	90 e0       	ldi	r25, 0x00	; 0
 292:	02 2e       	mov	r0, r18
 294:	02 c0       	rjmp	.+4      	; 0x29a <DIO_void_set_pin_in_pullUP+0x96>
 296:	88 0f       	add	r24, r24
 298:	99 1f       	adc	r25, r25
 29a:	0a 94       	dec	r0
 29c:	e2 f7       	brpl	.-8      	; 0x296 <DIO_void_set_pin_in_pullUP+0x92>
 29e:	84 2b       	or	r24, r20
 2a0:	8c 93       	st	X, r24
}
 2a2:	0f 90       	pop	r0
 2a4:	0f 90       	pop	r0
 2a6:	cf 91       	pop	r28
 2a8:	df 91       	pop	r29
 2aa:	08 95       	ret

000002ac <DIO_void_set_port>:


/* Assign Value to output PORTx functions */
void DIO_void_set_port(u8 copy_u8_port_id)
{
 2ac:	df 93       	push	r29
 2ae:	cf 93       	push	r28
 2b0:	0f 92       	push	r0
 2b2:	cd b7       	in	r28, 0x3d	; 61
 2b4:	de b7       	in	r29, 0x3e	; 62
 2b6:	89 83       	std	Y+1, r24	; 0x01
	 *													 (3, PORTD)
	 *	
	 *	Function does not return any output, yet it affects the 
	 *	PORT output Register PORTx							       
	 */
	*(DIO_PORTx_REF[copy_u8_port_id]) = PORT_MAX;
 2b8:	89 81       	ldd	r24, Y+1	; 0x01
 2ba:	88 2f       	mov	r24, r24
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	88 0f       	add	r24, r24
 2c0:	99 1f       	adc	r25, r25
 2c2:	fc 01       	movw	r30, r24
 2c4:	e0 59       	subi	r30, 0x90	; 144
 2c6:	ff 4f       	sbci	r31, 0xFF	; 255
 2c8:	01 90       	ld	r0, Z+
 2ca:	f0 81       	ld	r31, Z
 2cc:	e0 2d       	mov	r30, r0
 2ce:	8f ef       	ldi	r24, 0xFF	; 255
 2d0:	80 83       	st	Z, r24
}
 2d2:	0f 90       	pop	r0
 2d4:	cf 91       	pop	r28
 2d6:	df 91       	pop	r29
 2d8:	08 95       	ret

000002da <DIO_void_clear_port>:


void DIO_void_clear_port(u8 copy_u8_port_id)
{
 2da:	df 93       	push	r29
 2dc:	cf 93       	push	r28
 2de:	0f 92       	push	r0
 2e0:	cd b7       	in	r28, 0x3d	; 61
 2e2:	de b7       	in	r29, 0x3e	; 62
 2e4:	89 83       	std	Y+1, r24	; 0x01
	 *													 (3, PORTD)
	 *	
	 *	Function does not return any output, yet it affects the 
	 *	PORT output Register PORTx							       
	 */
	*(DIO_PORTx_REF[copy_u8_port_id]) = LOW;
 2e6:	89 81       	ldd	r24, Y+1	; 0x01
 2e8:	88 2f       	mov	r24, r24
 2ea:	90 e0       	ldi	r25, 0x00	; 0
 2ec:	88 0f       	add	r24, r24
 2ee:	99 1f       	adc	r25, r25
 2f0:	fc 01       	movw	r30, r24
 2f2:	e0 59       	subi	r30, 0x90	; 144
 2f4:	ff 4f       	sbci	r31, 0xFF	; 255
 2f6:	01 90       	ld	r0, Z+
 2f8:	f0 81       	ld	r31, Z
 2fa:	e0 2d       	mov	r30, r0
 2fc:	10 82       	st	Z, r1
}
 2fe:	0f 90       	pop	r0
 300:	cf 91       	pop	r28
 302:	df 91       	pop	r29
 304:	08 95       	ret

00000306 <DIO_void_toggle_port>:


void DIO_void_toggle_port(u8 copy_u8_port_id)
{
 306:	df 93       	push	r29
 308:	cf 93       	push	r28
 30a:	0f 92       	push	r0
 30c:	cd b7       	in	r28, 0x3d	; 61
 30e:	de b7       	in	r29, 0x3e	; 62
 310:	89 83       	std	Y+1, r24	; 0x01
	 *													 (3, PORTD)
	 *	
	 *	Function does not return any output, yet it affects the 
	 *	PORT output Register PORTx							       
	 */
	*(DIO_PORTx_REF[copy_u8_port_id]) ^= PORT_MAX;
 312:	89 81       	ldd	r24, Y+1	; 0x01
 314:	88 2f       	mov	r24, r24
 316:	90 e0       	ldi	r25, 0x00	; 0
 318:	88 0f       	add	r24, r24
 31a:	99 1f       	adc	r25, r25
 31c:	fc 01       	movw	r30, r24
 31e:	e0 59       	subi	r30, 0x90	; 144
 320:	ff 4f       	sbci	r31, 0xFF	; 255
 322:	a0 81       	ld	r26, Z
 324:	b1 81       	ldd	r27, Z+1	; 0x01
 326:	89 81       	ldd	r24, Y+1	; 0x01
 328:	88 2f       	mov	r24, r24
 32a:	90 e0       	ldi	r25, 0x00	; 0
 32c:	88 0f       	add	r24, r24
 32e:	99 1f       	adc	r25, r25
 330:	fc 01       	movw	r30, r24
 332:	e0 59       	subi	r30, 0x90	; 144
 334:	ff 4f       	sbci	r31, 0xFF	; 255
 336:	01 90       	ld	r0, Z+
 338:	f0 81       	ld	r31, Z
 33a:	e0 2d       	mov	r30, r0
 33c:	80 81       	ld	r24, Z
 33e:	80 95       	com	r24
 340:	8c 93       	st	X, r24
}
 342:	0f 90       	pop	r0
 344:	cf 91       	pop	r28
 346:	df 91       	pop	r29
 348:	08 95       	ret

0000034a <DIO_void_assign_port>:


void DIO_void_assign_port(u8 copy_u8_port_id, u8 port_val)
{
 34a:	df 93       	push	r29
 34c:	cf 93       	push	r28
 34e:	00 d0       	rcall	.+0      	; 0x350 <DIO_void_assign_port+0x6>
 350:	cd b7       	in	r28, 0x3d	; 61
 352:	de b7       	in	r29, 0x3e	; 62
 354:	89 83       	std	Y+1, r24	; 0x01
 356:	6a 83       	std	Y+2, r22	; 0x02
	 *												  	 (3, PORTD)
	 *	
	 *	Function does not return any output, yet it affects the 
	 *	PORT output Register PORTx							       
	 */
	*(DIO_PORTx_REF[copy_u8_port_id]) = port_val;
 358:	89 81       	ldd	r24, Y+1	; 0x01
 35a:	88 2f       	mov	r24, r24
 35c:	90 e0       	ldi	r25, 0x00	; 0
 35e:	88 0f       	add	r24, r24
 360:	99 1f       	adc	r25, r25
 362:	fc 01       	movw	r30, r24
 364:	e0 59       	subi	r30, 0x90	; 144
 366:	ff 4f       	sbci	r31, 0xFF	; 255
 368:	01 90       	ld	r0, Z+
 36a:	f0 81       	ld	r31, Z
 36c:	e0 2d       	mov	r30, r0
 36e:	8a 81       	ldd	r24, Y+2	; 0x02
 370:	80 83       	st	Z, r24
}
 372:	0f 90       	pop	r0
 374:	0f 90       	pop	r0
 376:	cf 91       	pop	r28
 378:	df 91       	pop	r29
 37a:	08 95       	ret

0000037c <DIO_void_set_pin>:


/* Assign Value to output PINx functions */
void DIO_void_set_pin(u8 copy_u8_port_id, u8 copy_u8_pin_num)
{
 37c:	df 93       	push	r29
 37e:	cf 93       	push	r28
 380:	00 d0       	rcall	.+0      	; 0x382 <DIO_void_set_pin+0x6>
 382:	cd b7       	in	r28, 0x3d	; 61
 384:	de b7       	in	r29, 0x3e	; 62
 386:	89 83       	std	Y+1, r24	; 0x01
 388:	6a 83       	std	Y+2, r22	; 0x02
	 *		copy_u8_pin_num>> pin number that needed to be set 0-7
	 *	
	 *	Function does not return any output, yet it affects 
	 *	given pin of the PORT output Register PORTx				   
	 */
	set_bit(*(DIO_PORTx_REF[copy_u8_port_id]), copy_u8_pin_num);
 38a:	89 81       	ldd	r24, Y+1	; 0x01
 38c:	88 2f       	mov	r24, r24
 38e:	90 e0       	ldi	r25, 0x00	; 0
 390:	88 0f       	add	r24, r24
 392:	99 1f       	adc	r25, r25
 394:	fc 01       	movw	r30, r24
 396:	e0 59       	subi	r30, 0x90	; 144
 398:	ff 4f       	sbci	r31, 0xFF	; 255
 39a:	a0 81       	ld	r26, Z
 39c:	b1 81       	ldd	r27, Z+1	; 0x01
 39e:	89 81       	ldd	r24, Y+1	; 0x01
 3a0:	88 2f       	mov	r24, r24
 3a2:	90 e0       	ldi	r25, 0x00	; 0
 3a4:	88 0f       	add	r24, r24
 3a6:	99 1f       	adc	r25, r25
 3a8:	fc 01       	movw	r30, r24
 3aa:	e0 59       	subi	r30, 0x90	; 144
 3ac:	ff 4f       	sbci	r31, 0xFF	; 255
 3ae:	01 90       	ld	r0, Z+
 3b0:	f0 81       	ld	r31, Z
 3b2:	e0 2d       	mov	r30, r0
 3b4:	80 81       	ld	r24, Z
 3b6:	48 2f       	mov	r20, r24
 3b8:	8a 81       	ldd	r24, Y+2	; 0x02
 3ba:	28 2f       	mov	r18, r24
 3bc:	30 e0       	ldi	r19, 0x00	; 0
 3be:	81 e0       	ldi	r24, 0x01	; 1
 3c0:	90 e0       	ldi	r25, 0x00	; 0
 3c2:	02 2e       	mov	r0, r18
 3c4:	02 c0       	rjmp	.+4      	; 0x3ca <DIO_void_set_pin+0x4e>
 3c6:	88 0f       	add	r24, r24
 3c8:	99 1f       	adc	r25, r25
 3ca:	0a 94       	dec	r0
 3cc:	e2 f7       	brpl	.-8      	; 0x3c6 <DIO_void_set_pin+0x4a>
 3ce:	84 2b       	or	r24, r20
 3d0:	8c 93       	st	X, r24
}
 3d2:	0f 90       	pop	r0
 3d4:	0f 90       	pop	r0
 3d6:	cf 91       	pop	r28
 3d8:	df 91       	pop	r29
 3da:	08 95       	ret

000003dc <DIO_void_clear_pin>:


void DIO_void_clear_pin(u8 copy_u8_port_id, u8 copy_u8_pin_num)
{
 3dc:	df 93       	push	r29
 3de:	cf 93       	push	r28
 3e0:	00 d0       	rcall	.+0      	; 0x3e2 <DIO_void_clear_pin+0x6>
 3e2:	cd b7       	in	r28, 0x3d	; 61
 3e4:	de b7       	in	r29, 0x3e	; 62
 3e6:	89 83       	std	Y+1, r24	; 0x01
 3e8:	6a 83       	std	Y+2, r22	; 0x02
	 *		copy_u8_pin_num>> pin number that needed to be set 0-7
	 *	
	 *	Function does not return any output, yet it affects 
	 *	given pin of the PORT output Register PORTx				   
	 */
	clr_bit(*(DIO_PORTx_REF[copy_u8_port_id]), copy_u8_pin_num);
 3ea:	89 81       	ldd	r24, Y+1	; 0x01
 3ec:	88 2f       	mov	r24, r24
 3ee:	90 e0       	ldi	r25, 0x00	; 0
 3f0:	88 0f       	add	r24, r24
 3f2:	99 1f       	adc	r25, r25
 3f4:	fc 01       	movw	r30, r24
 3f6:	e0 59       	subi	r30, 0x90	; 144
 3f8:	ff 4f       	sbci	r31, 0xFF	; 255
 3fa:	a0 81       	ld	r26, Z
 3fc:	b1 81       	ldd	r27, Z+1	; 0x01
 3fe:	89 81       	ldd	r24, Y+1	; 0x01
 400:	88 2f       	mov	r24, r24
 402:	90 e0       	ldi	r25, 0x00	; 0
 404:	88 0f       	add	r24, r24
 406:	99 1f       	adc	r25, r25
 408:	fc 01       	movw	r30, r24
 40a:	e0 59       	subi	r30, 0x90	; 144
 40c:	ff 4f       	sbci	r31, 0xFF	; 255
 40e:	01 90       	ld	r0, Z+
 410:	f0 81       	ld	r31, Z
 412:	e0 2d       	mov	r30, r0
 414:	80 81       	ld	r24, Z
 416:	48 2f       	mov	r20, r24
 418:	8a 81       	ldd	r24, Y+2	; 0x02
 41a:	28 2f       	mov	r18, r24
 41c:	30 e0       	ldi	r19, 0x00	; 0
 41e:	81 e0       	ldi	r24, 0x01	; 1
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	02 2e       	mov	r0, r18
 424:	02 c0       	rjmp	.+4      	; 0x42a <DIO_void_clear_pin+0x4e>
 426:	88 0f       	add	r24, r24
 428:	99 1f       	adc	r25, r25
 42a:	0a 94       	dec	r0
 42c:	e2 f7       	brpl	.-8      	; 0x426 <DIO_void_clear_pin+0x4a>
 42e:	80 95       	com	r24
 430:	84 23       	and	r24, r20
 432:	8c 93       	st	X, r24
}
 434:	0f 90       	pop	r0
 436:	0f 90       	pop	r0
 438:	cf 91       	pop	r28
 43a:	df 91       	pop	r29
 43c:	08 95       	ret

0000043e <DIO_void_toggle_pin>:


void DIO_void_toggle_pin(u8 copy_u8_port_id, u8 copy_u8_pin_num)
{
 43e:	df 93       	push	r29
 440:	cf 93       	push	r28
 442:	00 d0       	rcall	.+0      	; 0x444 <DIO_void_toggle_pin+0x6>
 444:	cd b7       	in	r28, 0x3d	; 61
 446:	de b7       	in	r29, 0x3e	; 62
 448:	89 83       	std	Y+1, r24	; 0x01
 44a:	6a 83       	std	Y+2, r22	; 0x02
	 *		copy_u8_pin_num>> pin number that needed to be set 0-7
	 *	
	 *	Function does not return any output, yet it affects 
	 *	given pin of the PORT output Register PORTx				   
	 */
	tgl_bit(*(DIO_PORTx_REF[copy_u8_port_id]), copy_u8_pin_num);
 44c:	89 81       	ldd	r24, Y+1	; 0x01
 44e:	88 2f       	mov	r24, r24
 450:	90 e0       	ldi	r25, 0x00	; 0
 452:	88 0f       	add	r24, r24
 454:	99 1f       	adc	r25, r25
 456:	fc 01       	movw	r30, r24
 458:	e0 59       	subi	r30, 0x90	; 144
 45a:	ff 4f       	sbci	r31, 0xFF	; 255
 45c:	a0 81       	ld	r26, Z
 45e:	b1 81       	ldd	r27, Z+1	; 0x01
 460:	89 81       	ldd	r24, Y+1	; 0x01
 462:	88 2f       	mov	r24, r24
 464:	90 e0       	ldi	r25, 0x00	; 0
 466:	88 0f       	add	r24, r24
 468:	99 1f       	adc	r25, r25
 46a:	fc 01       	movw	r30, r24
 46c:	e0 59       	subi	r30, 0x90	; 144
 46e:	ff 4f       	sbci	r31, 0xFF	; 255
 470:	01 90       	ld	r0, Z+
 472:	f0 81       	ld	r31, Z
 474:	e0 2d       	mov	r30, r0
 476:	80 81       	ld	r24, Z
 478:	48 2f       	mov	r20, r24
 47a:	8a 81       	ldd	r24, Y+2	; 0x02
 47c:	28 2f       	mov	r18, r24
 47e:	30 e0       	ldi	r19, 0x00	; 0
 480:	81 e0       	ldi	r24, 0x01	; 1
 482:	90 e0       	ldi	r25, 0x00	; 0
 484:	02 2e       	mov	r0, r18
 486:	02 c0       	rjmp	.+4      	; 0x48c <DIO_void_toggle_pin+0x4e>
 488:	88 0f       	add	r24, r24
 48a:	99 1f       	adc	r25, r25
 48c:	0a 94       	dec	r0
 48e:	e2 f7       	brpl	.-8      	; 0x488 <DIO_void_toggle_pin+0x4a>
 490:	84 27       	eor	r24, r20
 492:	8c 93       	st	X, r24
}
 494:	0f 90       	pop	r0
 496:	0f 90       	pop	r0
 498:	cf 91       	pop	r28
 49a:	df 91       	pop	r29
 49c:	08 95       	ret

0000049e <DIO_void_assign_pin>:


void DIO_void_assign_pin(u8 copy_u8_port_id, u8 copy_u8_pin_num, u8 pin_val)
{
 49e:	df 93       	push	r29
 4a0:	cf 93       	push	r28
 4a2:	00 d0       	rcall	.+0      	; 0x4a4 <DIO_void_assign_pin+0x6>
 4a4:	0f 92       	push	r0
 4a6:	cd b7       	in	r28, 0x3d	; 61
 4a8:	de b7       	in	r29, 0x3e	; 62
 4aa:	89 83       	std	Y+1, r24	; 0x01
 4ac:	6a 83       	std	Y+2, r22	; 0x02
 4ae:	4b 83       	std	Y+3, r20	; 0x03
	 *		copy_u8_pin_num>> pin number that needed to be set 0-7
	 *	
	 *	Function does not return any output, yet it affects 
	 *	given pin of the PORT output Register PORTx				   
	 */
	agn_bit(*(DIO_PORTx_REF[copy_u8_port_id]), copy_u8_pin_num, pin_val);
 4b0:	8b 81       	ldd	r24, Y+3	; 0x03
 4b2:	88 23       	and	r24, r24
 4b4:	29 f1       	breq	.+74     	; 0x500 <DIO_void_assign_pin+0x62>
 4b6:	89 81       	ldd	r24, Y+1	; 0x01
 4b8:	88 2f       	mov	r24, r24
 4ba:	90 e0       	ldi	r25, 0x00	; 0
 4bc:	88 0f       	add	r24, r24
 4be:	99 1f       	adc	r25, r25
 4c0:	fc 01       	movw	r30, r24
 4c2:	e0 59       	subi	r30, 0x90	; 144
 4c4:	ff 4f       	sbci	r31, 0xFF	; 255
 4c6:	a0 81       	ld	r26, Z
 4c8:	b1 81       	ldd	r27, Z+1	; 0x01
 4ca:	89 81       	ldd	r24, Y+1	; 0x01
 4cc:	88 2f       	mov	r24, r24
 4ce:	90 e0       	ldi	r25, 0x00	; 0
 4d0:	88 0f       	add	r24, r24
 4d2:	99 1f       	adc	r25, r25
 4d4:	fc 01       	movw	r30, r24
 4d6:	e0 59       	subi	r30, 0x90	; 144
 4d8:	ff 4f       	sbci	r31, 0xFF	; 255
 4da:	01 90       	ld	r0, Z+
 4dc:	f0 81       	ld	r31, Z
 4de:	e0 2d       	mov	r30, r0
 4e0:	80 81       	ld	r24, Z
 4e2:	48 2f       	mov	r20, r24
 4e4:	8a 81       	ldd	r24, Y+2	; 0x02
 4e6:	28 2f       	mov	r18, r24
 4e8:	30 e0       	ldi	r19, 0x00	; 0
 4ea:	81 e0       	ldi	r24, 0x01	; 1
 4ec:	90 e0       	ldi	r25, 0x00	; 0
 4ee:	02 2e       	mov	r0, r18
 4f0:	02 c0       	rjmp	.+4      	; 0x4f6 <DIO_void_assign_pin+0x58>
 4f2:	88 0f       	add	r24, r24
 4f4:	99 1f       	adc	r25, r25
 4f6:	0a 94       	dec	r0
 4f8:	e2 f7       	brpl	.-8      	; 0x4f2 <DIO_void_assign_pin+0x54>
 4fa:	84 2b       	or	r24, r20
 4fc:	8c 93       	st	X, r24
 4fe:	25 c0       	rjmp	.+74     	; 0x54a <DIO_void_assign_pin+0xac>
 500:	89 81       	ldd	r24, Y+1	; 0x01
 502:	88 2f       	mov	r24, r24
 504:	90 e0       	ldi	r25, 0x00	; 0
 506:	88 0f       	add	r24, r24
 508:	99 1f       	adc	r25, r25
 50a:	fc 01       	movw	r30, r24
 50c:	e0 59       	subi	r30, 0x90	; 144
 50e:	ff 4f       	sbci	r31, 0xFF	; 255
 510:	a0 81       	ld	r26, Z
 512:	b1 81       	ldd	r27, Z+1	; 0x01
 514:	89 81       	ldd	r24, Y+1	; 0x01
 516:	88 2f       	mov	r24, r24
 518:	90 e0       	ldi	r25, 0x00	; 0
 51a:	88 0f       	add	r24, r24
 51c:	99 1f       	adc	r25, r25
 51e:	fc 01       	movw	r30, r24
 520:	e0 59       	subi	r30, 0x90	; 144
 522:	ff 4f       	sbci	r31, 0xFF	; 255
 524:	01 90       	ld	r0, Z+
 526:	f0 81       	ld	r31, Z
 528:	e0 2d       	mov	r30, r0
 52a:	80 81       	ld	r24, Z
 52c:	48 2f       	mov	r20, r24
 52e:	8a 81       	ldd	r24, Y+2	; 0x02
 530:	28 2f       	mov	r18, r24
 532:	30 e0       	ldi	r19, 0x00	; 0
 534:	81 e0       	ldi	r24, 0x01	; 1
 536:	90 e0       	ldi	r25, 0x00	; 0
 538:	02 2e       	mov	r0, r18
 53a:	02 c0       	rjmp	.+4      	; 0x540 <DIO_void_assign_pin+0xa2>
 53c:	88 0f       	add	r24, r24
 53e:	99 1f       	adc	r25, r25
 540:	0a 94       	dec	r0
 542:	e2 f7       	brpl	.-8      	; 0x53c <DIO_void_assign_pin+0x9e>
 544:	80 95       	com	r24
 546:	84 23       	and	r24, r20
 548:	8c 93       	st	X, r24
}
 54a:	0f 90       	pop	r0
 54c:	0f 90       	pop	r0
 54e:	0f 90       	pop	r0
 550:	cf 91       	pop	r28
 552:	df 91       	pop	r29
 554:	08 95       	ret

00000556 <DIO_u8_get_port>:


/* Get value from input PORTx functions */
u8 DIO_u8_get_port(u8 copy_u8_port_id)
{
 556:	df 93       	push	r29
 558:	cf 93       	push	r28
 55a:	0f 92       	push	r0
 55c:	cd b7       	in	r28, 0x3d	; 61
 55e:	de b7       	in	r29, 0x3e	; 62
 560:	89 83       	std	Y+1, r24	; 0x01
	 *	
	 *	Function does not affect any regester it only gets
	 *	from the value in the input regester PINx of the 
	 *	given port                                                 
	 */
	return *(DIO_PINx_REF[copy_u8_port_id]);
 562:	89 81       	ldd	r24, Y+1	; 0x01
 564:	88 2f       	mov	r24, r24
 566:	90 e0       	ldi	r25, 0x00	; 0
 568:	88 0f       	add	r24, r24
 56a:	99 1f       	adc	r25, r25
 56c:	fc 01       	movw	r30, r24
 56e:	e0 5a       	subi	r30, 0xA0	; 160
 570:	ff 4f       	sbci	r31, 0xFF	; 255
 572:	01 90       	ld	r0, Z+
 574:	f0 81       	ld	r31, Z
 576:	e0 2d       	mov	r30, r0
 578:	80 81       	ld	r24, Z
}
 57a:	0f 90       	pop	r0
 57c:	cf 91       	pop	r28
 57e:	df 91       	pop	r29
 580:	08 95       	ret

00000582 <DIO_u8_get_pin>:


/* Get value from input PINx functions */
u8 DIO_u8_get_pin(u8 copy_u8_port_id, u8 copy_u8_pin_num)
{
 582:	df 93       	push	r29
 584:	cf 93       	push	r28
 586:	00 d0       	rcall	.+0      	; 0x588 <DIO_u8_get_pin+0x6>
 588:	cd b7       	in	r28, 0x3d	; 61
 58a:	de b7       	in	r29, 0x3e	; 62
 58c:	89 83       	std	Y+1, r24	; 0x01
 58e:	6a 83       	std	Y+2, r22	; 0x02
	 *	
	 *	Function does not affect any regester it only gets the pin
	 *	value from the value in the input regester PINx of the 
	 *	given port                                                 
	 */
	return get_bit(*(DIO_PINx_REF[copy_u8_port_id]), copy_u8_pin_num);
 590:	89 81       	ldd	r24, Y+1	; 0x01
 592:	88 2f       	mov	r24, r24
 594:	90 e0       	ldi	r25, 0x00	; 0
 596:	88 0f       	add	r24, r24
 598:	99 1f       	adc	r25, r25
 59a:	fc 01       	movw	r30, r24
 59c:	e0 5a       	subi	r30, 0xA0	; 160
 59e:	ff 4f       	sbci	r31, 0xFF	; 255
 5a0:	01 90       	ld	r0, Z+
 5a2:	f0 81       	ld	r31, Z
 5a4:	e0 2d       	mov	r30, r0
 5a6:	80 81       	ld	r24, Z
 5a8:	28 2f       	mov	r18, r24
 5aa:	30 e0       	ldi	r19, 0x00	; 0
 5ac:	8a 81       	ldd	r24, Y+2	; 0x02
 5ae:	88 2f       	mov	r24, r24
 5b0:	90 e0       	ldi	r25, 0x00	; 0
 5b2:	a9 01       	movw	r20, r18
 5b4:	02 c0       	rjmp	.+4      	; 0x5ba <DIO_u8_get_pin+0x38>
 5b6:	55 95       	asr	r21
 5b8:	47 95       	ror	r20
 5ba:	8a 95       	dec	r24
 5bc:	e2 f7       	brpl	.-8      	; 0x5b6 <DIO_u8_get_pin+0x34>
 5be:	ca 01       	movw	r24, r20
 5c0:	81 70       	andi	r24, 0x01	; 1
}
 5c2:	0f 90       	pop	r0
 5c4:	0f 90       	pop	r0
 5c6:	cf 91       	pop	r28
 5c8:	df 91       	pop	r29
 5ca:	08 95       	ret

000005cc <_exit>:
 5cc:	f8 94       	cli

000005ce <__stop_program>:
 5ce:	ff cf       	rjmp	.-2      	; 0x5ce <__stop_program>
