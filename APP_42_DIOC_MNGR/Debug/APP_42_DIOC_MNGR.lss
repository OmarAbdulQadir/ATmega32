
APP_42_DIOC_MNGR.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000005fa  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001c  00800060  000005fa  0000068e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  0080007c  0080007c  000006aa  2**0
                  ALLOC
  3 .stab         00000a5c  00000000  00000000  000006ac  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000a9a  00000000  00000000  00001108  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea ef       	ldi	r30, 0xFA	; 250
  68:	f5 e0       	ldi	r31, 0x05	; 5
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	ac 37       	cpi	r26, 0x7C	; 124
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	ac e7       	ldi	r26, 0x7C	; 124
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ad 37       	cpi	r26, 0x7D	; 125
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 fb 02 	jmp	0x5f6	; 0x5f6 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
 *      Author: Omar A.Qadir
 */


int main(void)
{
  92:	df 93       	push	r29
  94:	cf 93       	push	r28
  96:	cd b7       	in	r28, 0x3d	; 61
  98:	de b7       	in	r29, 0x3e	; 62
  9a:	ff cf       	rjmp	.-2      	; 0x9a <main+0x8>

0000009c <DIOC_init>:
extern DIOC_Channel DIOC_Channels_ptr[DIOC_NO_CHANNELS];
static u8 DIOC_initFlag = STD_FALSE;

// DIOC Manager intitiation
void DIOC_init( void )
{
  9c:	df 93       	push	r29
  9e:	cf 93       	push	r28
  a0:	cd b7       	in	r28, 0x3d	; 61
  a2:	de b7       	in	r29, 0x3e	; 62
	// make the init flag true
	// Set initial direction of the channels
	// Set initial value of the channels
}
  a4:	cf 91       	pop	r28
  a6:	df 91       	pop	r29
  a8:	08 95       	ret

000000aa <DIOC_SetChannelDir>:

// DIOC Set Channel Direction
STD_ReturnType DIOC_SetChannelDir( u8 copy_ChannelID, u8 copy_ChannelDirection )
{
  aa:	df 93       	push	r29
  ac:	cf 93       	push	r28
  ae:	00 d0       	rcall	.+0      	; 0xb0 <DIOC_SetChannelDir+0x6>
  b0:	cd b7       	in	r28, 0x3d	; 61
  b2:	de b7       	in	r29, 0x3e	; 62
  b4:	89 83       	std	Y+1, r24	; 0x01
  b6:	6a 83       	std	Y+2, r22	; 0x02
				// do nothing
				// return ok notice
	// if data  is not valid
	// report an error
	// return not ok notice
	return 0;
  b8:	80 e0       	ldi	r24, 0x00	; 0
}
  ba:	0f 90       	pop	r0
  bc:	0f 90       	pop	r0
  be:	cf 91       	pop	r28
  c0:	df 91       	pop	r29
  c2:	08 95       	ret

000000c4 <DIOC_WriteChannel>:

// DIOC Manager write Channel
STD_ReturnType DIOC_WriteChannel( u8 copy_ChannelID , u8 copy_ChannelValue )
{
  c4:	df 93       	push	r29
  c6:	cf 93       	push	r28
  c8:	00 d0       	rcall	.+0      	; 0xca <DIOC_WriteChannel+0x6>
  ca:	cd b7       	in	r28, 0x3d	; 61
  cc:	de b7       	in	r29, 0x3e	; 62
  ce:	89 83       	std	Y+1, r24	; 0x01
  d0:	6a 83       	std	Y+2, r22	; 0x02

	return 0;
  d2:	80 e0       	ldi	r24, 0x00	; 0
}
  d4:	0f 90       	pop	r0
  d6:	0f 90       	pop	r0
  d8:	cf 91       	pop	r28
  da:	df 91       	pop	r29
  dc:	08 95       	ret

000000de <DIOC_ReadChannel>:

// DIOC Manager read Channel data
STD_ReturnType DIOC_ReadChannel( u8 copy_ChannelID , u8* ptr_ChannelValue )
{
  de:	df 93       	push	r29
  e0:	cf 93       	push	r28
  e2:	00 d0       	rcall	.+0      	; 0xe4 <DIOC_ReadChannel+0x6>
  e4:	0f 92       	push	r0
  e6:	cd b7       	in	r28, 0x3d	; 61
  e8:	de b7       	in	r29, 0x3e	; 62
  ea:	89 83       	std	Y+1, r24	; 0x01
  ec:	7b 83       	std	Y+3, r23	; 0x03
  ee:	6a 83       	std	Y+2, r22	; 0x02

	return 0;
  f0:	80 e0       	ldi	r24, 0x00	; 0
}
  f2:	0f 90       	pop	r0
  f4:	0f 90       	pop	r0
  f6:	0f 90       	pop	r0
  f8:	cf 91       	pop	r28
  fa:	df 91       	pop	r29
  fc:	08 95       	ret

000000fe <DIO_void_set_port_dir>:


/* Implementing of the driver functions */
/* Set direction of PORTx functions */
void DIO_void_set_port_dir(u8 copy_u8_port_id, u8 port_dir_copy)
{
  fe:	df 93       	push	r29
 100:	cf 93       	push	r28
 102:	00 d0       	rcall	.+0      	; 0x104 <DIO_void_set_port_dir+0x6>
 104:	cd b7       	in	r28, 0x3d	; 61
 106:	de b7       	in	r29, 0x3e	; 62
 108:	89 83       	std	Y+1, r24	; 0x01
 10a:	6a 83       	std	Y+2, r22	; 0x02
	 *						1: for output pin
	 *	
	 *	Function does not return any output, yet it affects the 
	 *	PORT Direction Register DDRx
	 */
	*(DIO_DDRx_REF[copy_u8_port_id]) = port_dir_copy;
 10c:	89 81       	ldd	r24, Y+1	; 0x01
 10e:	88 2f       	mov	r24, r24
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	88 0f       	add	r24, r24
 114:	99 1f       	adc	r25, r25
 116:	fc 01       	movw	r30, r24
 118:	e5 59       	subi	r30, 0x95	; 149
 11a:	ff 4f       	sbci	r31, 0xFF	; 255
 11c:	01 90       	ld	r0, Z+
 11e:	f0 81       	ld	r31, Z
 120:	e0 2d       	mov	r30, r0
 122:	8a 81       	ldd	r24, Y+2	; 0x02
 124:	80 83       	st	Z, r24
}
 126:	0f 90       	pop	r0
 128:	0f 90       	pop	r0
 12a:	cf 91       	pop	r28
 12c:	df 91       	pop	r29
 12e:	08 95       	ret

00000130 <DIO_void_set_port_in_pullUp>:


void DIO_void_set_port_in_pullUp(u8 copy_u8_port_id)
{
 130:	df 93       	push	r29
 132:	cf 93       	push	r28
 134:	0f 92       	push	r0
 136:	cd b7       	in	r28, 0x3d	; 61
 138:	de b7       	in	r29, 0x3e	; 62
 13a:	89 83       	std	Y+1, r24	; 0x01
	 *												  	 (3, PORTD)
	 *	
	 *	Function does not return any output, yet it affects the 
	 *	PORT Direction Register DDRx
	 */
	*(DIO_DDRx_REF[copy_u8_port_id]) = INPUT;
 13c:	89 81       	ldd	r24, Y+1	; 0x01
 13e:	88 2f       	mov	r24, r24
 140:	90 e0       	ldi	r25, 0x00	; 0
 142:	88 0f       	add	r24, r24
 144:	99 1f       	adc	r25, r25
 146:	fc 01       	movw	r30, r24
 148:	e5 59       	subi	r30, 0x95	; 149
 14a:	ff 4f       	sbci	r31, 0xFF	; 255
 14c:	01 90       	ld	r0, Z+
 14e:	f0 81       	ld	r31, Z
 150:	e0 2d       	mov	r30, r0
 152:	10 82       	st	Z, r1
	*(DIO_PORTx_REF[copy_u8_port_id]) = PORT_MAX;
 154:	89 81       	ldd	r24, Y+1	; 0x01
 156:	88 2f       	mov	r24, r24
 158:	90 e0       	ldi	r25, 0x00	; 0
 15a:	88 0f       	add	r24, r24
 15c:	99 1f       	adc	r25, r25
 15e:	fc 01       	movw	r30, r24
 160:	ed 58       	subi	r30, 0x8D	; 141
 162:	ff 4f       	sbci	r31, 0xFF	; 255
 164:	01 90       	ld	r0, Z+
 166:	f0 81       	ld	r31, Z
 168:	e0 2d       	mov	r30, r0
 16a:	8f ef       	ldi	r24, 0xFF	; 255
 16c:	80 83       	st	Z, r24
}
 16e:	0f 90       	pop	r0
 170:	cf 91       	pop	r28
 172:	df 91       	pop	r29
 174:	08 95       	ret

00000176 <DIO_void_set_pin_dir>:


/* Set direction of PINx functions */
void DIO_void_set_pin_dir(u8 copy_u8_port_id, u8 copy_u8_pin_num, u8 pin_dir_copy)
{
 176:	df 93       	push	r29
 178:	cf 93       	push	r28
 17a:	00 d0       	rcall	.+0      	; 0x17c <DIO_void_set_pin_dir+0x6>
 17c:	0f 92       	push	r0
 17e:	cd b7       	in	r28, 0x3d	; 61
 180:	de b7       	in	r29, 0x3e	; 62
 182:	89 83       	std	Y+1, r24	; 0x01
 184:	6a 83       	std	Y+2, r22	; 0x02
 186:	4b 83       	std	Y+3, r20	; 0x03
	 *				   1: for output pin
	 *
	 * Function does not return any output, yet it affects the 
	 * pin in the PORT Direction Register DDRx
	 */	
	agn_bit(*(DIO_DDRx_REF[copy_u8_port_id]), copy_u8_pin_num, pin_dir_copy);
 188:	8b 81       	ldd	r24, Y+3	; 0x03
 18a:	88 23       	and	r24, r24
 18c:	29 f1       	breq	.+74     	; 0x1d8 <DIO_void_set_pin_dir+0x62>
 18e:	89 81       	ldd	r24, Y+1	; 0x01
 190:	88 2f       	mov	r24, r24
 192:	90 e0       	ldi	r25, 0x00	; 0
 194:	88 0f       	add	r24, r24
 196:	99 1f       	adc	r25, r25
 198:	fc 01       	movw	r30, r24
 19a:	e5 59       	subi	r30, 0x95	; 149
 19c:	ff 4f       	sbci	r31, 0xFF	; 255
 19e:	a0 81       	ld	r26, Z
 1a0:	b1 81       	ldd	r27, Z+1	; 0x01
 1a2:	89 81       	ldd	r24, Y+1	; 0x01
 1a4:	88 2f       	mov	r24, r24
 1a6:	90 e0       	ldi	r25, 0x00	; 0
 1a8:	88 0f       	add	r24, r24
 1aa:	99 1f       	adc	r25, r25
 1ac:	fc 01       	movw	r30, r24
 1ae:	e5 59       	subi	r30, 0x95	; 149
 1b0:	ff 4f       	sbci	r31, 0xFF	; 255
 1b2:	01 90       	ld	r0, Z+
 1b4:	f0 81       	ld	r31, Z
 1b6:	e0 2d       	mov	r30, r0
 1b8:	80 81       	ld	r24, Z
 1ba:	48 2f       	mov	r20, r24
 1bc:	8a 81       	ldd	r24, Y+2	; 0x02
 1be:	28 2f       	mov	r18, r24
 1c0:	30 e0       	ldi	r19, 0x00	; 0
 1c2:	81 e0       	ldi	r24, 0x01	; 1
 1c4:	90 e0       	ldi	r25, 0x00	; 0
 1c6:	02 2e       	mov	r0, r18
 1c8:	02 c0       	rjmp	.+4      	; 0x1ce <DIO_void_set_pin_dir+0x58>
 1ca:	88 0f       	add	r24, r24
 1cc:	99 1f       	adc	r25, r25
 1ce:	0a 94       	dec	r0
 1d0:	e2 f7       	brpl	.-8      	; 0x1ca <DIO_void_set_pin_dir+0x54>
 1d2:	84 2b       	or	r24, r20
 1d4:	8c 93       	st	X, r24
 1d6:	25 c0       	rjmp	.+74     	; 0x222 <DIO_void_set_pin_dir+0xac>
 1d8:	89 81       	ldd	r24, Y+1	; 0x01
 1da:	88 2f       	mov	r24, r24
 1dc:	90 e0       	ldi	r25, 0x00	; 0
 1de:	88 0f       	add	r24, r24
 1e0:	99 1f       	adc	r25, r25
 1e2:	fc 01       	movw	r30, r24
 1e4:	e5 59       	subi	r30, 0x95	; 149
 1e6:	ff 4f       	sbci	r31, 0xFF	; 255
 1e8:	a0 81       	ld	r26, Z
 1ea:	b1 81       	ldd	r27, Z+1	; 0x01
 1ec:	89 81       	ldd	r24, Y+1	; 0x01
 1ee:	88 2f       	mov	r24, r24
 1f0:	90 e0       	ldi	r25, 0x00	; 0
 1f2:	88 0f       	add	r24, r24
 1f4:	99 1f       	adc	r25, r25
 1f6:	fc 01       	movw	r30, r24
 1f8:	e5 59       	subi	r30, 0x95	; 149
 1fa:	ff 4f       	sbci	r31, 0xFF	; 255
 1fc:	01 90       	ld	r0, Z+
 1fe:	f0 81       	ld	r31, Z
 200:	e0 2d       	mov	r30, r0
 202:	80 81       	ld	r24, Z
 204:	48 2f       	mov	r20, r24
 206:	8a 81       	ldd	r24, Y+2	; 0x02
 208:	28 2f       	mov	r18, r24
 20a:	30 e0       	ldi	r19, 0x00	; 0
 20c:	81 e0       	ldi	r24, 0x01	; 1
 20e:	90 e0       	ldi	r25, 0x00	; 0
 210:	02 2e       	mov	r0, r18
 212:	02 c0       	rjmp	.+4      	; 0x218 <DIO_void_set_pin_dir+0xa2>
 214:	88 0f       	add	r24, r24
 216:	99 1f       	adc	r25, r25
 218:	0a 94       	dec	r0
 21a:	e2 f7       	brpl	.-8      	; 0x214 <DIO_void_set_pin_dir+0x9e>
 21c:	80 95       	com	r24
 21e:	84 23       	and	r24, r20
 220:	8c 93       	st	X, r24
}
 222:	0f 90       	pop	r0
 224:	0f 90       	pop	r0
 226:	0f 90       	pop	r0
 228:	cf 91       	pop	r28
 22a:	df 91       	pop	r29
 22c:	08 95       	ret

0000022e <DIO_void_set_pin_in_pullUP>:


void DIO_void_set_pin_in_pullUP(u8 copy_u8_port_id, u8 copy_u8_pin_num)
{
 22e:	df 93       	push	r29
 230:	cf 93       	push	r28
 232:	00 d0       	rcall	.+0      	; 0x234 <DIO_void_set_pin_in_pullUP+0x6>
 234:	cd b7       	in	r28, 0x3d	; 61
 236:	de b7       	in	r29, 0x3e	; 62
 238:	89 83       	std	Y+1, r24	; 0x01
 23a:	6a 83       	std	Y+2, r22	; 0x02
	 *												  	 (3, PORTD)
	 *	
	 *	Function does not return any output, yet it affects the 
	 *	pin in the PORT Direction Register DDRx					  
	 */
	clr_bit(*(DIO_DDRx_REF[copy_u8_port_id]), copy_u8_pin_num);
 23c:	89 81       	ldd	r24, Y+1	; 0x01
 23e:	88 2f       	mov	r24, r24
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	88 0f       	add	r24, r24
 244:	99 1f       	adc	r25, r25
 246:	fc 01       	movw	r30, r24
 248:	e5 59       	subi	r30, 0x95	; 149
 24a:	ff 4f       	sbci	r31, 0xFF	; 255
 24c:	a0 81       	ld	r26, Z
 24e:	b1 81       	ldd	r27, Z+1	; 0x01
 250:	89 81       	ldd	r24, Y+1	; 0x01
 252:	88 2f       	mov	r24, r24
 254:	90 e0       	ldi	r25, 0x00	; 0
 256:	88 0f       	add	r24, r24
 258:	99 1f       	adc	r25, r25
 25a:	fc 01       	movw	r30, r24
 25c:	e5 59       	subi	r30, 0x95	; 149
 25e:	ff 4f       	sbci	r31, 0xFF	; 255
 260:	01 90       	ld	r0, Z+
 262:	f0 81       	ld	r31, Z
 264:	e0 2d       	mov	r30, r0
 266:	80 81       	ld	r24, Z
 268:	48 2f       	mov	r20, r24
 26a:	8a 81       	ldd	r24, Y+2	; 0x02
 26c:	28 2f       	mov	r18, r24
 26e:	30 e0       	ldi	r19, 0x00	; 0
 270:	81 e0       	ldi	r24, 0x01	; 1
 272:	90 e0       	ldi	r25, 0x00	; 0
 274:	02 c0       	rjmp	.+4      	; 0x27a <DIO_void_set_pin_in_pullUP+0x4c>
 276:	88 0f       	add	r24, r24
 278:	99 1f       	adc	r25, r25
 27a:	2a 95       	dec	r18
 27c:	e2 f7       	brpl	.-8      	; 0x276 <DIO_void_set_pin_in_pullUP+0x48>
 27e:	80 95       	com	r24
 280:	84 23       	and	r24, r20
 282:	8c 93       	st	X, r24
	set_bit(*(DIO_PORTx_REF[copy_u8_port_id]), copy_u8_pin_num);
 284:	89 81       	ldd	r24, Y+1	; 0x01
 286:	88 2f       	mov	r24, r24
 288:	90 e0       	ldi	r25, 0x00	; 0
 28a:	88 0f       	add	r24, r24
 28c:	99 1f       	adc	r25, r25
 28e:	fc 01       	movw	r30, r24
 290:	ed 58       	subi	r30, 0x8D	; 141
 292:	ff 4f       	sbci	r31, 0xFF	; 255
 294:	a0 81       	ld	r26, Z
 296:	b1 81       	ldd	r27, Z+1	; 0x01
 298:	89 81       	ldd	r24, Y+1	; 0x01
 29a:	88 2f       	mov	r24, r24
 29c:	90 e0       	ldi	r25, 0x00	; 0
 29e:	88 0f       	add	r24, r24
 2a0:	99 1f       	adc	r25, r25
 2a2:	fc 01       	movw	r30, r24
 2a4:	ed 58       	subi	r30, 0x8D	; 141
 2a6:	ff 4f       	sbci	r31, 0xFF	; 255
 2a8:	01 90       	ld	r0, Z+
 2aa:	f0 81       	ld	r31, Z
 2ac:	e0 2d       	mov	r30, r0
 2ae:	80 81       	ld	r24, Z
 2b0:	48 2f       	mov	r20, r24
 2b2:	8a 81       	ldd	r24, Y+2	; 0x02
 2b4:	28 2f       	mov	r18, r24
 2b6:	30 e0       	ldi	r19, 0x00	; 0
 2b8:	81 e0       	ldi	r24, 0x01	; 1
 2ba:	90 e0       	ldi	r25, 0x00	; 0
 2bc:	02 2e       	mov	r0, r18
 2be:	02 c0       	rjmp	.+4      	; 0x2c4 <DIO_void_set_pin_in_pullUP+0x96>
 2c0:	88 0f       	add	r24, r24
 2c2:	99 1f       	adc	r25, r25
 2c4:	0a 94       	dec	r0
 2c6:	e2 f7       	brpl	.-8      	; 0x2c0 <DIO_void_set_pin_in_pullUP+0x92>
 2c8:	84 2b       	or	r24, r20
 2ca:	8c 93       	st	X, r24
}
 2cc:	0f 90       	pop	r0
 2ce:	0f 90       	pop	r0
 2d0:	cf 91       	pop	r28
 2d2:	df 91       	pop	r29
 2d4:	08 95       	ret

000002d6 <DIO_void_set_port>:


/* Assign Value to output PORTx functions */
void DIO_void_set_port(u8 copy_u8_port_id)
{
 2d6:	df 93       	push	r29
 2d8:	cf 93       	push	r28
 2da:	0f 92       	push	r0
 2dc:	cd b7       	in	r28, 0x3d	; 61
 2de:	de b7       	in	r29, 0x3e	; 62
 2e0:	89 83       	std	Y+1, r24	; 0x01
	 *													 (3, PORTD)
	 *	
	 *	Function does not return any output, yet it affects the 
	 *	PORT output Register PORTx							       
	 */
	*(DIO_PORTx_REF[copy_u8_port_id]) = PORT_MAX;
 2e2:	89 81       	ldd	r24, Y+1	; 0x01
 2e4:	88 2f       	mov	r24, r24
 2e6:	90 e0       	ldi	r25, 0x00	; 0
 2e8:	88 0f       	add	r24, r24
 2ea:	99 1f       	adc	r25, r25
 2ec:	fc 01       	movw	r30, r24
 2ee:	ed 58       	subi	r30, 0x8D	; 141
 2f0:	ff 4f       	sbci	r31, 0xFF	; 255
 2f2:	01 90       	ld	r0, Z+
 2f4:	f0 81       	ld	r31, Z
 2f6:	e0 2d       	mov	r30, r0
 2f8:	8f ef       	ldi	r24, 0xFF	; 255
 2fa:	80 83       	st	Z, r24
}
 2fc:	0f 90       	pop	r0
 2fe:	cf 91       	pop	r28
 300:	df 91       	pop	r29
 302:	08 95       	ret

00000304 <DIO_void_clear_port>:


void DIO_void_clear_port(u8 copy_u8_port_id)
{
 304:	df 93       	push	r29
 306:	cf 93       	push	r28
 308:	0f 92       	push	r0
 30a:	cd b7       	in	r28, 0x3d	; 61
 30c:	de b7       	in	r29, 0x3e	; 62
 30e:	89 83       	std	Y+1, r24	; 0x01
	 *													 (3, PORTD)
	 *	
	 *	Function does not return any output, yet it affects the 
	 *	PORT output Register PORTx							       
	 */
	*(DIO_PORTx_REF[copy_u8_port_id]) = LOW;
 310:	89 81       	ldd	r24, Y+1	; 0x01
 312:	88 2f       	mov	r24, r24
 314:	90 e0       	ldi	r25, 0x00	; 0
 316:	88 0f       	add	r24, r24
 318:	99 1f       	adc	r25, r25
 31a:	fc 01       	movw	r30, r24
 31c:	ed 58       	subi	r30, 0x8D	; 141
 31e:	ff 4f       	sbci	r31, 0xFF	; 255
 320:	01 90       	ld	r0, Z+
 322:	f0 81       	ld	r31, Z
 324:	e0 2d       	mov	r30, r0
 326:	10 82       	st	Z, r1
}
 328:	0f 90       	pop	r0
 32a:	cf 91       	pop	r28
 32c:	df 91       	pop	r29
 32e:	08 95       	ret

00000330 <DIO_void_toggle_port>:


void DIO_void_toggle_port(u8 copy_u8_port_id)
{
 330:	df 93       	push	r29
 332:	cf 93       	push	r28
 334:	0f 92       	push	r0
 336:	cd b7       	in	r28, 0x3d	; 61
 338:	de b7       	in	r29, 0x3e	; 62
 33a:	89 83       	std	Y+1, r24	; 0x01
	 *													 (3, PORTD)
	 *	
	 *	Function does not return any output, yet it affects the 
	 *	PORT output Register PORTx							       
	 */
	*(DIO_PORTx_REF[copy_u8_port_id]) ^= PORT_MAX;
 33c:	89 81       	ldd	r24, Y+1	; 0x01
 33e:	88 2f       	mov	r24, r24
 340:	90 e0       	ldi	r25, 0x00	; 0
 342:	88 0f       	add	r24, r24
 344:	99 1f       	adc	r25, r25
 346:	fc 01       	movw	r30, r24
 348:	ed 58       	subi	r30, 0x8D	; 141
 34a:	ff 4f       	sbci	r31, 0xFF	; 255
 34c:	a0 81       	ld	r26, Z
 34e:	b1 81       	ldd	r27, Z+1	; 0x01
 350:	89 81       	ldd	r24, Y+1	; 0x01
 352:	88 2f       	mov	r24, r24
 354:	90 e0       	ldi	r25, 0x00	; 0
 356:	88 0f       	add	r24, r24
 358:	99 1f       	adc	r25, r25
 35a:	fc 01       	movw	r30, r24
 35c:	ed 58       	subi	r30, 0x8D	; 141
 35e:	ff 4f       	sbci	r31, 0xFF	; 255
 360:	01 90       	ld	r0, Z+
 362:	f0 81       	ld	r31, Z
 364:	e0 2d       	mov	r30, r0
 366:	80 81       	ld	r24, Z
 368:	80 95       	com	r24
 36a:	8c 93       	st	X, r24
}
 36c:	0f 90       	pop	r0
 36e:	cf 91       	pop	r28
 370:	df 91       	pop	r29
 372:	08 95       	ret

00000374 <DIO_void_assign_port>:


void DIO_void_assign_port(u8 copy_u8_port_id, u8 port_val)
{
 374:	df 93       	push	r29
 376:	cf 93       	push	r28
 378:	00 d0       	rcall	.+0      	; 0x37a <DIO_void_assign_port+0x6>
 37a:	cd b7       	in	r28, 0x3d	; 61
 37c:	de b7       	in	r29, 0x3e	; 62
 37e:	89 83       	std	Y+1, r24	; 0x01
 380:	6a 83       	std	Y+2, r22	; 0x02
	 *												  	 (3, PORTD)
	 *	
	 *	Function does not return any output, yet it affects the 
	 *	PORT output Register PORTx							       
	 */
	*(DIO_PORTx_REF[copy_u8_port_id]) = port_val;
 382:	89 81       	ldd	r24, Y+1	; 0x01
 384:	88 2f       	mov	r24, r24
 386:	90 e0       	ldi	r25, 0x00	; 0
 388:	88 0f       	add	r24, r24
 38a:	99 1f       	adc	r25, r25
 38c:	fc 01       	movw	r30, r24
 38e:	ed 58       	subi	r30, 0x8D	; 141
 390:	ff 4f       	sbci	r31, 0xFF	; 255
 392:	01 90       	ld	r0, Z+
 394:	f0 81       	ld	r31, Z
 396:	e0 2d       	mov	r30, r0
 398:	8a 81       	ldd	r24, Y+2	; 0x02
 39a:	80 83       	st	Z, r24
}
 39c:	0f 90       	pop	r0
 39e:	0f 90       	pop	r0
 3a0:	cf 91       	pop	r28
 3a2:	df 91       	pop	r29
 3a4:	08 95       	ret

000003a6 <DIO_void_set_pin>:


/* Assign Value to output PINx functions */
void DIO_void_set_pin(u8 copy_u8_port_id, u8 copy_u8_pin_num)
{
 3a6:	df 93       	push	r29
 3a8:	cf 93       	push	r28
 3aa:	00 d0       	rcall	.+0      	; 0x3ac <DIO_void_set_pin+0x6>
 3ac:	cd b7       	in	r28, 0x3d	; 61
 3ae:	de b7       	in	r29, 0x3e	; 62
 3b0:	89 83       	std	Y+1, r24	; 0x01
 3b2:	6a 83       	std	Y+2, r22	; 0x02
	 *		copy_u8_pin_num>> pin number that needed to be set 0-7
	 *	
	 *	Function does not return any output, yet it affects 
	 *	given pin of the PORT output Register PORTx				   
	 */
	set_bit(*(DIO_PORTx_REF[copy_u8_port_id]), copy_u8_pin_num);
 3b4:	89 81       	ldd	r24, Y+1	; 0x01
 3b6:	88 2f       	mov	r24, r24
 3b8:	90 e0       	ldi	r25, 0x00	; 0
 3ba:	88 0f       	add	r24, r24
 3bc:	99 1f       	adc	r25, r25
 3be:	fc 01       	movw	r30, r24
 3c0:	ed 58       	subi	r30, 0x8D	; 141
 3c2:	ff 4f       	sbci	r31, 0xFF	; 255
 3c4:	a0 81       	ld	r26, Z
 3c6:	b1 81       	ldd	r27, Z+1	; 0x01
 3c8:	89 81       	ldd	r24, Y+1	; 0x01
 3ca:	88 2f       	mov	r24, r24
 3cc:	90 e0       	ldi	r25, 0x00	; 0
 3ce:	88 0f       	add	r24, r24
 3d0:	99 1f       	adc	r25, r25
 3d2:	fc 01       	movw	r30, r24
 3d4:	ed 58       	subi	r30, 0x8D	; 141
 3d6:	ff 4f       	sbci	r31, 0xFF	; 255
 3d8:	01 90       	ld	r0, Z+
 3da:	f0 81       	ld	r31, Z
 3dc:	e0 2d       	mov	r30, r0
 3de:	80 81       	ld	r24, Z
 3e0:	48 2f       	mov	r20, r24
 3e2:	8a 81       	ldd	r24, Y+2	; 0x02
 3e4:	28 2f       	mov	r18, r24
 3e6:	30 e0       	ldi	r19, 0x00	; 0
 3e8:	81 e0       	ldi	r24, 0x01	; 1
 3ea:	90 e0       	ldi	r25, 0x00	; 0
 3ec:	02 2e       	mov	r0, r18
 3ee:	02 c0       	rjmp	.+4      	; 0x3f4 <DIO_void_set_pin+0x4e>
 3f0:	88 0f       	add	r24, r24
 3f2:	99 1f       	adc	r25, r25
 3f4:	0a 94       	dec	r0
 3f6:	e2 f7       	brpl	.-8      	; 0x3f0 <DIO_void_set_pin+0x4a>
 3f8:	84 2b       	or	r24, r20
 3fa:	8c 93       	st	X, r24
}
 3fc:	0f 90       	pop	r0
 3fe:	0f 90       	pop	r0
 400:	cf 91       	pop	r28
 402:	df 91       	pop	r29
 404:	08 95       	ret

00000406 <DIO_void_clear_pin>:


void DIO_void_clear_pin(u8 copy_u8_port_id, u8 copy_u8_pin_num)
{
 406:	df 93       	push	r29
 408:	cf 93       	push	r28
 40a:	00 d0       	rcall	.+0      	; 0x40c <DIO_void_clear_pin+0x6>
 40c:	cd b7       	in	r28, 0x3d	; 61
 40e:	de b7       	in	r29, 0x3e	; 62
 410:	89 83       	std	Y+1, r24	; 0x01
 412:	6a 83       	std	Y+2, r22	; 0x02
	 *		copy_u8_pin_num>> pin number that needed to be set 0-7
	 *	
	 *	Function does not return any output, yet it affects 
	 *	given pin of the PORT output Register PORTx				   
	 */
	clr_bit(*(DIO_PORTx_REF[copy_u8_port_id]), copy_u8_pin_num);
 414:	89 81       	ldd	r24, Y+1	; 0x01
 416:	88 2f       	mov	r24, r24
 418:	90 e0       	ldi	r25, 0x00	; 0
 41a:	88 0f       	add	r24, r24
 41c:	99 1f       	adc	r25, r25
 41e:	fc 01       	movw	r30, r24
 420:	ed 58       	subi	r30, 0x8D	; 141
 422:	ff 4f       	sbci	r31, 0xFF	; 255
 424:	a0 81       	ld	r26, Z
 426:	b1 81       	ldd	r27, Z+1	; 0x01
 428:	89 81       	ldd	r24, Y+1	; 0x01
 42a:	88 2f       	mov	r24, r24
 42c:	90 e0       	ldi	r25, 0x00	; 0
 42e:	88 0f       	add	r24, r24
 430:	99 1f       	adc	r25, r25
 432:	fc 01       	movw	r30, r24
 434:	ed 58       	subi	r30, 0x8D	; 141
 436:	ff 4f       	sbci	r31, 0xFF	; 255
 438:	01 90       	ld	r0, Z+
 43a:	f0 81       	ld	r31, Z
 43c:	e0 2d       	mov	r30, r0
 43e:	80 81       	ld	r24, Z
 440:	48 2f       	mov	r20, r24
 442:	8a 81       	ldd	r24, Y+2	; 0x02
 444:	28 2f       	mov	r18, r24
 446:	30 e0       	ldi	r19, 0x00	; 0
 448:	81 e0       	ldi	r24, 0x01	; 1
 44a:	90 e0       	ldi	r25, 0x00	; 0
 44c:	02 2e       	mov	r0, r18
 44e:	02 c0       	rjmp	.+4      	; 0x454 <DIO_void_clear_pin+0x4e>
 450:	88 0f       	add	r24, r24
 452:	99 1f       	adc	r25, r25
 454:	0a 94       	dec	r0
 456:	e2 f7       	brpl	.-8      	; 0x450 <DIO_void_clear_pin+0x4a>
 458:	80 95       	com	r24
 45a:	84 23       	and	r24, r20
 45c:	8c 93       	st	X, r24
}
 45e:	0f 90       	pop	r0
 460:	0f 90       	pop	r0
 462:	cf 91       	pop	r28
 464:	df 91       	pop	r29
 466:	08 95       	ret

00000468 <DIO_void_toggle_pin>:


void DIO_void_toggle_pin(u8 copy_u8_port_id, u8 copy_u8_pin_num)
{
 468:	df 93       	push	r29
 46a:	cf 93       	push	r28
 46c:	00 d0       	rcall	.+0      	; 0x46e <DIO_void_toggle_pin+0x6>
 46e:	cd b7       	in	r28, 0x3d	; 61
 470:	de b7       	in	r29, 0x3e	; 62
 472:	89 83       	std	Y+1, r24	; 0x01
 474:	6a 83       	std	Y+2, r22	; 0x02
	 *		copy_u8_pin_num>> pin number that needed to be set 0-7
	 *	
	 *	Function does not return any output, yet it affects 
	 *	given pin of the PORT output Register PORTx				   
	 */
	tgl_bit(*(DIO_PORTx_REF[copy_u8_port_id]), copy_u8_pin_num);
 476:	89 81       	ldd	r24, Y+1	; 0x01
 478:	88 2f       	mov	r24, r24
 47a:	90 e0       	ldi	r25, 0x00	; 0
 47c:	88 0f       	add	r24, r24
 47e:	99 1f       	adc	r25, r25
 480:	fc 01       	movw	r30, r24
 482:	ed 58       	subi	r30, 0x8D	; 141
 484:	ff 4f       	sbci	r31, 0xFF	; 255
 486:	a0 81       	ld	r26, Z
 488:	b1 81       	ldd	r27, Z+1	; 0x01
 48a:	89 81       	ldd	r24, Y+1	; 0x01
 48c:	88 2f       	mov	r24, r24
 48e:	90 e0       	ldi	r25, 0x00	; 0
 490:	88 0f       	add	r24, r24
 492:	99 1f       	adc	r25, r25
 494:	fc 01       	movw	r30, r24
 496:	ed 58       	subi	r30, 0x8D	; 141
 498:	ff 4f       	sbci	r31, 0xFF	; 255
 49a:	01 90       	ld	r0, Z+
 49c:	f0 81       	ld	r31, Z
 49e:	e0 2d       	mov	r30, r0
 4a0:	80 81       	ld	r24, Z
 4a2:	48 2f       	mov	r20, r24
 4a4:	8a 81       	ldd	r24, Y+2	; 0x02
 4a6:	28 2f       	mov	r18, r24
 4a8:	30 e0       	ldi	r19, 0x00	; 0
 4aa:	81 e0       	ldi	r24, 0x01	; 1
 4ac:	90 e0       	ldi	r25, 0x00	; 0
 4ae:	02 2e       	mov	r0, r18
 4b0:	02 c0       	rjmp	.+4      	; 0x4b6 <DIO_void_toggle_pin+0x4e>
 4b2:	88 0f       	add	r24, r24
 4b4:	99 1f       	adc	r25, r25
 4b6:	0a 94       	dec	r0
 4b8:	e2 f7       	brpl	.-8      	; 0x4b2 <DIO_void_toggle_pin+0x4a>
 4ba:	84 27       	eor	r24, r20
 4bc:	8c 93       	st	X, r24
}
 4be:	0f 90       	pop	r0
 4c0:	0f 90       	pop	r0
 4c2:	cf 91       	pop	r28
 4c4:	df 91       	pop	r29
 4c6:	08 95       	ret

000004c8 <DIO_void_assign_pin>:


void DIO_void_assign_pin(u8 copy_u8_port_id, u8 copy_u8_pin_num, u8 pin_val)
{
 4c8:	df 93       	push	r29
 4ca:	cf 93       	push	r28
 4cc:	00 d0       	rcall	.+0      	; 0x4ce <DIO_void_assign_pin+0x6>
 4ce:	0f 92       	push	r0
 4d0:	cd b7       	in	r28, 0x3d	; 61
 4d2:	de b7       	in	r29, 0x3e	; 62
 4d4:	89 83       	std	Y+1, r24	; 0x01
 4d6:	6a 83       	std	Y+2, r22	; 0x02
 4d8:	4b 83       	std	Y+3, r20	; 0x03
	 *		copy_u8_pin_num>> pin number that needed to be set 0-7
	 *	
	 *	Function does not return any output, yet it affects 
	 *	given pin of the PORT output Register PORTx				   
	 */
	agn_bit(*(DIO_PORTx_REF[copy_u8_port_id]), copy_u8_pin_num, pin_val);
 4da:	8b 81       	ldd	r24, Y+3	; 0x03
 4dc:	88 23       	and	r24, r24
 4de:	29 f1       	breq	.+74     	; 0x52a <DIO_void_assign_pin+0x62>
 4e0:	89 81       	ldd	r24, Y+1	; 0x01
 4e2:	88 2f       	mov	r24, r24
 4e4:	90 e0       	ldi	r25, 0x00	; 0
 4e6:	88 0f       	add	r24, r24
 4e8:	99 1f       	adc	r25, r25
 4ea:	fc 01       	movw	r30, r24
 4ec:	ed 58       	subi	r30, 0x8D	; 141
 4ee:	ff 4f       	sbci	r31, 0xFF	; 255
 4f0:	a0 81       	ld	r26, Z
 4f2:	b1 81       	ldd	r27, Z+1	; 0x01
 4f4:	89 81       	ldd	r24, Y+1	; 0x01
 4f6:	88 2f       	mov	r24, r24
 4f8:	90 e0       	ldi	r25, 0x00	; 0
 4fa:	88 0f       	add	r24, r24
 4fc:	99 1f       	adc	r25, r25
 4fe:	fc 01       	movw	r30, r24
 500:	ed 58       	subi	r30, 0x8D	; 141
 502:	ff 4f       	sbci	r31, 0xFF	; 255
 504:	01 90       	ld	r0, Z+
 506:	f0 81       	ld	r31, Z
 508:	e0 2d       	mov	r30, r0
 50a:	80 81       	ld	r24, Z
 50c:	48 2f       	mov	r20, r24
 50e:	8a 81       	ldd	r24, Y+2	; 0x02
 510:	28 2f       	mov	r18, r24
 512:	30 e0       	ldi	r19, 0x00	; 0
 514:	81 e0       	ldi	r24, 0x01	; 1
 516:	90 e0       	ldi	r25, 0x00	; 0
 518:	02 2e       	mov	r0, r18
 51a:	02 c0       	rjmp	.+4      	; 0x520 <DIO_void_assign_pin+0x58>
 51c:	88 0f       	add	r24, r24
 51e:	99 1f       	adc	r25, r25
 520:	0a 94       	dec	r0
 522:	e2 f7       	brpl	.-8      	; 0x51c <DIO_void_assign_pin+0x54>
 524:	84 2b       	or	r24, r20
 526:	8c 93       	st	X, r24
 528:	25 c0       	rjmp	.+74     	; 0x574 <DIO_void_assign_pin+0xac>
 52a:	89 81       	ldd	r24, Y+1	; 0x01
 52c:	88 2f       	mov	r24, r24
 52e:	90 e0       	ldi	r25, 0x00	; 0
 530:	88 0f       	add	r24, r24
 532:	99 1f       	adc	r25, r25
 534:	fc 01       	movw	r30, r24
 536:	ed 58       	subi	r30, 0x8D	; 141
 538:	ff 4f       	sbci	r31, 0xFF	; 255
 53a:	a0 81       	ld	r26, Z
 53c:	b1 81       	ldd	r27, Z+1	; 0x01
 53e:	89 81       	ldd	r24, Y+1	; 0x01
 540:	88 2f       	mov	r24, r24
 542:	90 e0       	ldi	r25, 0x00	; 0
 544:	88 0f       	add	r24, r24
 546:	99 1f       	adc	r25, r25
 548:	fc 01       	movw	r30, r24
 54a:	ed 58       	subi	r30, 0x8D	; 141
 54c:	ff 4f       	sbci	r31, 0xFF	; 255
 54e:	01 90       	ld	r0, Z+
 550:	f0 81       	ld	r31, Z
 552:	e0 2d       	mov	r30, r0
 554:	80 81       	ld	r24, Z
 556:	48 2f       	mov	r20, r24
 558:	8a 81       	ldd	r24, Y+2	; 0x02
 55a:	28 2f       	mov	r18, r24
 55c:	30 e0       	ldi	r19, 0x00	; 0
 55e:	81 e0       	ldi	r24, 0x01	; 1
 560:	90 e0       	ldi	r25, 0x00	; 0
 562:	02 2e       	mov	r0, r18
 564:	02 c0       	rjmp	.+4      	; 0x56a <DIO_void_assign_pin+0xa2>
 566:	88 0f       	add	r24, r24
 568:	99 1f       	adc	r25, r25
 56a:	0a 94       	dec	r0
 56c:	e2 f7       	brpl	.-8      	; 0x566 <DIO_void_assign_pin+0x9e>
 56e:	80 95       	com	r24
 570:	84 23       	and	r24, r20
 572:	8c 93       	st	X, r24
}
 574:	0f 90       	pop	r0
 576:	0f 90       	pop	r0
 578:	0f 90       	pop	r0
 57a:	cf 91       	pop	r28
 57c:	df 91       	pop	r29
 57e:	08 95       	ret

00000580 <DIO_u8_get_port>:


/* Get value from input PORTx functions */
u8 DIO_u8_get_port(u8 copy_u8_port_id)
{
 580:	df 93       	push	r29
 582:	cf 93       	push	r28
 584:	0f 92       	push	r0
 586:	cd b7       	in	r28, 0x3d	; 61
 588:	de b7       	in	r29, 0x3e	; 62
 58a:	89 83       	std	Y+1, r24	; 0x01
	 *	
	 *	Function does not affect any regester it only gets
	 *	from the value in the input regester PINx of the 
	 *	given port                                                 
	 */
	return *(DIO_PINx_REF[copy_u8_port_id]);
 58c:	89 81       	ldd	r24, Y+1	; 0x01
 58e:	88 2f       	mov	r24, r24
 590:	90 e0       	ldi	r25, 0x00	; 0
 592:	88 0f       	add	r24, r24
 594:	99 1f       	adc	r25, r25
 596:	fc 01       	movw	r30, r24
 598:	ed 59       	subi	r30, 0x9D	; 157
 59a:	ff 4f       	sbci	r31, 0xFF	; 255
 59c:	01 90       	ld	r0, Z+
 59e:	f0 81       	ld	r31, Z
 5a0:	e0 2d       	mov	r30, r0
 5a2:	80 81       	ld	r24, Z
}
 5a4:	0f 90       	pop	r0
 5a6:	cf 91       	pop	r28
 5a8:	df 91       	pop	r29
 5aa:	08 95       	ret

000005ac <DIO_u8_get_pin>:


/* Get value from input PINx functions */
u8 DIO_u8_get_pin(u8 copy_u8_port_id, u8 copy_u8_pin_num)
{
 5ac:	df 93       	push	r29
 5ae:	cf 93       	push	r28
 5b0:	00 d0       	rcall	.+0      	; 0x5b2 <DIO_u8_get_pin+0x6>
 5b2:	cd b7       	in	r28, 0x3d	; 61
 5b4:	de b7       	in	r29, 0x3e	; 62
 5b6:	89 83       	std	Y+1, r24	; 0x01
 5b8:	6a 83       	std	Y+2, r22	; 0x02
	 *	
	 *	Function does not affect any regester it only gets the pin
	 *	value from the value in the input regester PINx of the 
	 *	given port                                                 
	 */
	return get_bit(*(DIO_PINx_REF[copy_u8_port_id]), copy_u8_pin_num);
 5ba:	89 81       	ldd	r24, Y+1	; 0x01
 5bc:	88 2f       	mov	r24, r24
 5be:	90 e0       	ldi	r25, 0x00	; 0
 5c0:	88 0f       	add	r24, r24
 5c2:	99 1f       	adc	r25, r25
 5c4:	fc 01       	movw	r30, r24
 5c6:	ed 59       	subi	r30, 0x9D	; 157
 5c8:	ff 4f       	sbci	r31, 0xFF	; 255
 5ca:	01 90       	ld	r0, Z+
 5cc:	f0 81       	ld	r31, Z
 5ce:	e0 2d       	mov	r30, r0
 5d0:	80 81       	ld	r24, Z
 5d2:	28 2f       	mov	r18, r24
 5d4:	30 e0       	ldi	r19, 0x00	; 0
 5d6:	8a 81       	ldd	r24, Y+2	; 0x02
 5d8:	88 2f       	mov	r24, r24
 5da:	90 e0       	ldi	r25, 0x00	; 0
 5dc:	a9 01       	movw	r20, r18
 5de:	02 c0       	rjmp	.+4      	; 0x5e4 <DIO_u8_get_pin+0x38>
 5e0:	55 95       	asr	r21
 5e2:	47 95       	ror	r20
 5e4:	8a 95       	dec	r24
 5e6:	e2 f7       	brpl	.-8      	; 0x5e0 <DIO_u8_get_pin+0x34>
 5e8:	ca 01       	movw	r24, r20
 5ea:	81 70       	andi	r24, 0x01	; 1
}
 5ec:	0f 90       	pop	r0
 5ee:	0f 90       	pop	r0
 5f0:	cf 91       	pop	r28
 5f2:	df 91       	pop	r29
 5f4:	08 95       	ret

000005f6 <_exit>:
 5f6:	f8 94       	cli

000005f8 <__stop_program>:
 5f8:	ff cf       	rjmp	.-2      	; 0x5f8 <__stop_program>
