
APP_26_UART-testing.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001d8  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000006  00800060  000001d8  0000026c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000005  00800066  00800066  00000272  2**0
                  ALLOC

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 7e 00 	jmp	0xfc	; 0xfc <__vector_13>
  38:	0c 94 a8 00 	jmp	0x150	; 0x150 <__vector_14>
  3c:	0c 94 b2 00 	jmp	0x164	; 0x164 <__vector_15>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e8 ed       	ldi	r30, 0xD8	; 216
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a6 36       	cpi	r26, 0x66	; 102
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a6 e6       	ldi	r26, 0x66	; 102
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ab 36       	cpi	r26, 0x6B	; 107
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 da 00 	call	0x1b4	; 0x1b4 <main>
  8a:	0c 94 ea 00 	jmp	0x1d4	; 0x1d4 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <UART_void_init>:
  92:	10 bc       	out	0x20, r1	; 32
  94:	83 e3       	ldi	r24, 0x33	; 51
  96:	89 b9       	out	0x09, r24	; 9
  98:	88 ed       	ldi	r24, 0xD8	; 216
  9a:	8a b9       	out	0x0a, r24	; 10
  9c:	86 e8       	ldi	r24, 0x86	; 134
  9e:	80 bd       	out	0x20, r24	; 32
  a0:	8f b7       	in	r24, 0x3f	; 63
  a2:	80 68       	ori	r24, 0x80	; 128
  a4:	8f bf       	out	0x3f, r24	; 63
  a6:	08 95       	ret

000000a8 <UART_u8_if_available>:
  a8:	8b b1       	in	r24, 0x0b	; 11
  aa:	82 95       	swap	r24
  ac:	86 95       	lsr	r24
  ae:	81 70       	andi	r24, 0x01	; 1
  b0:	08 95       	ret

000000b2 <UART_void_transmit_char>:
  b2:	5d 9b       	sbis	0x0b, 5	; 11
  b4:	fe cf       	rjmp	.-4      	; 0xb2 <UART_void_transmit_char>
  b6:	8c b9       	out	0x0c, r24	; 12
  b8:	08 95       	ret

000000ba <UART_void_transmit_str>:
  ba:	20 91 6a 00 	lds	r18, 0x006A
  be:	fc 01       	movw	r30, r24
  c0:	e2 0f       	add	r30, r18
  c2:	f1 1d       	adc	r31, r1
  c4:	e0 81       	ld	r30, Z
  c6:	ee 23       	and	r30, r30
  c8:	39 f4       	brne	.+14     	; 0xd8 <UART_void_transmit_str+0x1e>
  ca:	10 92 6a 00 	sts	0x006A, r1
  ce:	10 92 67 00 	sts	0x0067, r1
  d2:	10 92 66 00 	sts	0x0066, r1
  d6:	08 95       	ret
  d8:	22 23       	and	r18, r18
  da:	21 f4       	brne	.+8      	; 0xe4 <UART_void_transmit_str+0x2a>
  dc:	90 93 67 00 	sts	0x0067, r25
  e0:	80 93 66 00 	sts	0x0066, r24
  e4:	5d 9b       	sbis	0x0b, 5	; 11
  e6:	fe cf       	rjmp	.-4      	; 0xe4 <UART_void_transmit_str+0x2a>
  e8:	ec b9       	out	0x0c, r30	; 12
  ea:	2f 5f       	subi	r18, 0xFF	; 255
  ec:	20 93 6a 00 	sts	0x006A, r18
  f0:	08 95       	ret

000000f2 <UART_void_set_Rx_callback>:
  f2:	90 93 69 00 	sts	0x0069, r25
  f6:	80 93 68 00 	sts	0x0068, r24
  fa:	08 95       	ret

000000fc <__vector_13>:
  fc:	1f 92       	push	r1
  fe:	0f 92       	push	r0
 100:	0f b6       	in	r0, 0x3f	; 63
 102:	0f 92       	push	r0
 104:	11 24       	eor	r1, r1
 106:	2f 93       	push	r18
 108:	3f 93       	push	r19
 10a:	4f 93       	push	r20
 10c:	5f 93       	push	r21
 10e:	6f 93       	push	r22
 110:	7f 93       	push	r23
 112:	8f 93       	push	r24
 114:	9f 93       	push	r25
 116:	af 93       	push	r26
 118:	bf 93       	push	r27
 11a:	ef 93       	push	r30
 11c:	ff 93       	push	r31
 11e:	e0 91 68 00 	lds	r30, 0x0068
 122:	f0 91 69 00 	lds	r31, 0x0069
 126:	30 97       	sbiw	r30, 0x00	; 0
 128:	11 f0       	breq	.+4      	; 0x12e <__vector_13+0x32>
 12a:	8c b1       	in	r24, 0x0c	; 12
 12c:	09 95       	icall
 12e:	ff 91       	pop	r31
 130:	ef 91       	pop	r30
 132:	bf 91       	pop	r27
 134:	af 91       	pop	r26
 136:	9f 91       	pop	r25
 138:	8f 91       	pop	r24
 13a:	7f 91       	pop	r23
 13c:	6f 91       	pop	r22
 13e:	5f 91       	pop	r21
 140:	4f 91       	pop	r20
 142:	3f 91       	pop	r19
 144:	2f 91       	pop	r18
 146:	0f 90       	pop	r0
 148:	0f be       	out	0x3f, r0	; 63
 14a:	0f 90       	pop	r0
 14c:	1f 90       	pop	r1
 14e:	18 95       	reti

00000150 <__vector_14>:
 150:	1f 92       	push	r1
 152:	0f 92       	push	r0
 154:	0f b6       	in	r0, 0x3f	; 63
 156:	0f 92       	push	r0
 158:	11 24       	eor	r1, r1
 15a:	0f 90       	pop	r0
 15c:	0f be       	out	0x3f, r0	; 63
 15e:	0f 90       	pop	r0
 160:	1f 90       	pop	r1
 162:	18 95       	reti

00000164 <__vector_15>:
 164:	1f 92       	push	r1
 166:	0f 92       	push	r0
 168:	0f b6       	in	r0, 0x3f	; 63
 16a:	0f 92       	push	r0
 16c:	11 24       	eor	r1, r1
 16e:	2f 93       	push	r18
 170:	3f 93       	push	r19
 172:	4f 93       	push	r20
 174:	5f 93       	push	r21
 176:	6f 93       	push	r22
 178:	7f 93       	push	r23
 17a:	8f 93       	push	r24
 17c:	9f 93       	push	r25
 17e:	af 93       	push	r26
 180:	bf 93       	push	r27
 182:	ef 93       	push	r30
 184:	ff 93       	push	r31
 186:	80 91 66 00 	lds	r24, 0x0066
 18a:	90 91 67 00 	lds	r25, 0x0067
 18e:	0e 94 5d 00 	call	0xba	; 0xba <UART_void_transmit_str>
 192:	ff 91       	pop	r31
 194:	ef 91       	pop	r30
 196:	bf 91       	pop	r27
 198:	af 91       	pop	r26
 19a:	9f 91       	pop	r25
 19c:	8f 91       	pop	r24
 19e:	7f 91       	pop	r23
 1a0:	6f 91       	pop	r22
 1a2:	5f 91       	pop	r21
 1a4:	4f 91       	pop	r20
 1a6:	3f 91       	pop	r19
 1a8:	2f 91       	pop	r18
 1aa:	0f 90       	pop	r0
 1ac:	0f be       	out	0x3f, r0	; 63
 1ae:	0f 90       	pop	r0
 1b0:	1f 90       	pop	r1
 1b2:	18 95       	reti

000001b4 <main>:
 1b4:	0e 94 49 00 	call	0x92	; 0x92 <UART_void_init>
 1b8:	80 e1       	ldi	r24, 0x10	; 16
 1ba:	97 e2       	ldi	r25, 0x27	; 39
 1bc:	28 ec       	ldi	r18, 0xC8	; 200
 1be:	30 e0       	ldi	r19, 0x00	; 0
 1c0:	f9 01       	movw	r30, r18
 1c2:	31 97       	sbiw	r30, 0x01	; 1
 1c4:	f1 f7       	brne	.-4      	; 0x1c2 <main+0xe>
 1c6:	01 97       	sbiw	r24, 0x01	; 1
 1c8:	d9 f7       	brne	.-10     	; 0x1c0 <main+0xc>
 1ca:	80 e6       	ldi	r24, 0x60	; 96
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	0e 94 5d 00 	call	0xba	; 0xba <UART_void_transmit_str>
 1d2:	ff cf       	rjmp	.-2      	; 0x1d2 <main+0x1e>

000001d4 <_exit>:
 1d4:	f8 94       	cli

000001d6 <__stop_program>:
 1d6:	ff cf       	rjmp	.-2      	; 0x1d6 <__stop_program>
